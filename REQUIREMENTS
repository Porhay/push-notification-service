Завдання:
- Розробити систему мікросервісів для керування користувачами та надсилання їм Push-сповіщень.

Вимоги:
- Використовуй NestJS для розробки кожного мікросервісу. 
- Ти маєш надати можливість клієнту робити HTTP запит на створення користувача. 
- Потрібно зберігати дані користувача в базі даних (ім`я користувача). 
- Через 24 години після створення користувача потрібно відправити йому пуш. 
- Для імітації Push-сповіщень використовуй фейковий запит на зовнішній сервіс, наприклад можна використовувати https://webhook.site/ для генерації url.
- Твої мікросервіси не повинні прямо залежати один від одного. 
- Використовуй Docker compose для розгортання інфраструктури. 
- Використовуй RabbitMQ та/або Redis, PostgreSQL або MySQL, NestJS.
- Результати заливати на GitHub, GitLab або щось схоже, на твій вибір. 
- Час на реалізацію до 3-4-х днів (враховуючи твою зайнятість).

Реалізація:
- Було вирішено створити 2 мікросервіси у моно-репозиторії та з`єднати їх за допомогою RabbitMQ.
- Перший мікросервіс accounts - відповідатиме за створення та автентифікацію юзера
- Другий мікросервіс notifications - відповідатиме за створення та відправку push повідомлень
- notifications сервіс буде містити воркер який буде запускатись раз в годину для перевірки повідомлень в базі даних 
та додавання їх в чергу RabbitMQ для відправки запиту. 
- Вважаю цей метод зручним, оскільки у разі неочікуваного відключення серверу система при перезапуску
відразу запустить воркер який додасть в чергу всі запити які мали бути відправлені в час коли сервер був недоступним.
Також зручно що якщо таких запитів буде багато - RabbitMQ відправить їх почергово без перевантаження системи як це могло бути без використання брокера.